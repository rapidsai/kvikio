<?xml version="1.0" encoding="UTF-8"?>

<project  xmlns="http://maven.apache.org/POM/4.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ai.rapids.kvikio</groupId>
  <artifactId>cufile</artifactId>
  <version>25.02.0-SNAPSHOT</version>

  <name>cuFile</name>
  <description>
      This project provides Java bindings for the GPUDirect Storage cuFile library, enabling the GPU to load and
      save large amounts of data to and from persistent storage. This is still a work in progress so some APIs may change.
  </description>
  <url>https://rapids.ai</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <junit.version>5.4.2</junit.version>
    <jcuda.version>12.0.0</jcuda.version>
    <cmake.version>3.23.2-b1</cmake.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.jcuda</groupId>
      <artifactId>jcuda</artifactId>
      <version>${jcuda.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jcuda</groupId>
      <artifactId>jcuda-natives</artifactId>
      <version>${jcuda.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-exec-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
          <configuration>
            <createDirs>true</createDirs>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
          <configuration>
            <argLine>-Djava.library.path=${project.build.directory}:${java.library.path}</argLine>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.junit.platform</groupId>
              <artifactId>junit-platform-surefire-provider</artifactId>
              <version>1.2.0</version>
            </dependency>
            <dependency>
              <groupId>org.junit.jupiter</groupId>
              <artifactId>junit-jupiter-engine</artifactId>
              <version>5.4.2</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.googlecode.cmake-maven-project</groupId>
        <artifactId>cmake-maven-plugin</artifactId>
        <version>${cmake.version}</version>
        <executions>
          <execution>
            <id>cmake-generate</id>
              <goals>
                <goal>generate</goal>
              </goals>
              <configuration>
                <sourcePath>${project.basedir}/src/main/native</sourcePath>
                <targetPath>${project.build.directory}/native-build</targetPath>
                <options>
                  <option>-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${project.build.directory}</option>
                </options>
              </configuration>
          </execution>
          <execution>
            <id>cmake-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <projectDirectory>${project.build.directory}/native-build</projectDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
