# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["12.9"]
      arch: [aarch64, x86_64]
    includes:
      - build-universal
      - build-cpp
      - build-py-wrapper
      - checks
      - cuda
      - cuda_version
      - depends_on_cupy
      - depends_on_libnvcomp
      - docs
      - py_version
      - rapids_build_skbuild
      - run
      - test_cpp
      - test_python
  test_cpp:
    output: none
    includes:
      - cuda_version
      - test_libkvikio
      - test_cpp
  test_python:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_kvikio
      - test_python
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - cuda_version
      - docs
      - py_version
      - test_kvikio
  py_build_kvikio:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_build_libkvikio:
    output: pyproject
    pyproject_dir: python/libkvikio
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_run_kvikio:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: project
    includes:
      - depends_on_cupy
      # TODO: restore runtime dependency when we no longer vendor nvcomp
      # (when nvcomp ships C++ wheels)
      # https://github.com/rapidsai/build-planning/issues/171
      # - depends_on_libnvcomp
      - depends_on_libkvikio
      - run
  py_rapids_build_libkvikio:
    output: pyproject
    pyproject_dir: python/libkvikio
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build-universal
  py_rapids_build_kvikio:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build-universal
      - build-cpp
      - build-py-wrapper
      - build-use-libkvikio-wheel
  py_optional_zarr:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: project.optional-dependencies
      key: zarr
    includes:
      - zarr
  py_optional_test:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python
  test_java:
    output: none
    includes:
      - build-universal
      - build-cpp
      - cuda_version
      - cuda
      - test_java
      - depends_on_libkvikio
channels:
  - rapidsai
  - rapidsai-nightly
  - conda-forge
dependencies:
  build-universal:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &cmake_ver cmake>=3.30.4
          - ninja
  build-cpp:
    common:
      - output_types: conda
        packages:
          - c-compiler
          - cxx-compiler
          - libcurl>=8.5.0,<9.0a0
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
              cuda: "12.*"
            packages:
              - gcc_linux-64=14.*
              - sysroot_linux-64=2.28
          - matrix:
              arch: aarch64
              cuda: "12.*"
            packages:
              - gcc_linux-aarch64=14.*
              - sysroot_linux-aarch64=2.28
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-nvcc
  build-use-libkvikio-wheel:
    common:
      - output_types: conda
        packages: &libkvikio_packages
          - libkvikio==25.10.*,>=0.0.0a0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libkvikio-cu12==25.10.*,>=0.0.0a0
          - {matrix: null, packages: *libkvikio_packages}
  build-py-wrapper:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - cython>=3.0.0
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
          - matrix:
              cuda: "12.5"
            packages:
              - cuda-version=12.5
          - matrix:
              cuda: "12.8"
            packages:
              - cuda-version=12.8
          - matrix:
              cuda: "12.9"
            packages:
              - cuda-version=12.9
  cuda:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - libcufile-dev
              - libnuma
  depends_on_cupy:
    common:
      - output_types: conda
        packages:
          - cupy>=12.0.0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: # All CUDA 12 versions
            packages:
              - cupy-cuda12x>=12.0.0
  depends_on_libnvcomp:
    common:
      - output_types: conda
        packages:
          - libnvcomp-dev==4.2.0.11
  depends_on_libkvikio:
    common:
      - output_types: conda
        packages:
          - &libkvikio_unsuffixed libkvikio==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          # This index is needed for libkvikio-cu12.
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libkvikio-cu12==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*libkvikio_unsuffixed]}
  docs:
    common:
      - output_types: [conda, requirements]
        packages:
          - numpydoc
          - sphinx
          - sphinx-click
          - sphinx_rtd_theme
      - output_types: conda
        packages:
          - doxygen=1.9.1 # pre-commit hook needs a specific version.
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
              py: "3.12"
            packages:
              - python=3.12
          - matrix:
              py: "3.13"
            packages:
              - python=3.13
          - matrix:
            packages:
              - python>=3.10,<3.14
  rapids_build_skbuild:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - rapids-build-backend>=0.4.0,<0.5.0.dev0
      - output_types: conda
        packages:
          - scikit-build-core>=0.10.0
      - output_types: [requirements, pyproject]
        packages:
          - scikit-build-core[pyproject]>=0.10.0
  run:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - numpy>=1.23,<3.0a0
          - packaging
  zarr:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - "zarr>=3.0.0,<4.0.0; python_version >= '3.11'"
  test_libkvikio:
    common:
      - output_types: conda
        packages:
          - libkvikio==25.10.*,>=0.0.0a0
          - libkvikio-tests==25.10.*,>=0.0.0a0
  test_kvikio:
    common:
      - output_types: conda
        packages:
          - libkvikio==25.10.*,>=0.0.0a0
          - kvikio==25.10.*,>=0.0.0a0
  test_cpp:
    common:
      - output_types: conda
        packages:
          - *cmake_ver
  test_python:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - rapids-dask-dependency==25.10.*,>=0.0.0a0
          - pytest
          - pytest-asyncio
          - pytest-cov
          - pytest-timeout
          - rangehttpserver
          - boto3>=1.21.21
      - output_types: [requirements, pyproject]
        packages:
          - moto[server]>=4.0.8
          - "zarr>=3.0.0,<4.0.0; python_version >= '3.11'"
      - output_types: conda
        packages:
          - moto>=4.0.8
    specific:
      - output_types: [conda, requirements, pyproject]
        matrices:
          - matrix: # All CUDA 12 versions
            packages:
              - cuda-python>=12.6.2,<13.0a0
  test_java:
    common:
      - output_types: conda
        packages:
          - make
          - maven
          - openjdk=11.*
