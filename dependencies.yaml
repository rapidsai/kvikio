# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["11.8", "12.5"]
      arch: [aarch64, x86_64]
    includes:
      - build-universal
      - build-cpp
      - build-py-wrapper
      - checks
      - cuda
      - cuda_version
      - depends_on_cupy
      - depends_on_nvcomp
      - docs
      - py_version
      - rapids_build_skbuild
      - run
      - test_cpp
      - test_python
  test_cpp:
    output: none
    includes:
      - cuda_version
      - test_cpp
  test_python:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_python
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - cuda_version
      - docs
      - py_version
  py_build_kvikio:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_build_libkvikio:
    output: pyproject
    pyproject_dir: python/libkvikio
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_run_kvikio:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: project
    includes:
      - depends_on_cupy
      - depends_on_nvcomp
      - run
  py_rapids_build_libkvikio:
    output: pyproject
    pyproject_dir: python/libkvikio
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build-universal
  py_rapids_build_kvikio:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build-universal
      - build-cpp
      - build-py-wrapper
      - build-use-libkvikio-wheel
  py_optional_test:
    output: pyproject
    pyproject_dir: python/kvikio
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python
channels:
  - rapidsai
  - rapidsai-nightly
  - conda-forge
  - nvidia
dependencies:
  build-universal:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &cmake_ver cmake>=3.26.4,!=3.30.0
          - ninja
  build-cpp:
    common:
      - output_types: conda
        packages:
          - c-compiler
          - cxx-compiler
          - libcurl>=7.87.0  # Need CURL_WRITEFUNC_ERROR <https://curl.se/libcurl/c/CURLOPT_WRITEFUNCTION.html>
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - gcc_linux-64=11.*
              - sysroot_linux-64=2.17
          - matrix:
              arch: aarch64
            packages:
              - gcc_linux-aarch64=11.*
              - sysroot_linux-aarch64=2.17
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
              cuda: "11.8"
            packages:
              - nvcc_linux-64=11.8
          - matrix:
              arch: aarch64
              cuda: "11.8"
            packages:
              - nvcc_linux-aarch64=11.8
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-nvcc
  build-use-libkvikio-wheel:
    common:
      - output_types: conda
        packages: &libkvikio_packages
          - libkvikio==24.12.*,>=0.0.0a0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libkvikio-cu12==24.12.*,>=0.0.0a0
          - matrix:
              cuda: "11.*"
              cuda_suffixed: "true"
            packages:
              - libkvikio-cu11==24.12.*,>=0.0.0a0
          - {matrix: null, packages: *libkvikio_packages}
  build-py-wrapper:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - cython>=3.0.0
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "11.2"
            packages:
              - cuda-version=11.2
          - matrix:
              cuda: "11.4"
            packages:
              - cuda-version=11.4
          - matrix:
              cuda: "11.5"
            packages:
              - cuda-version=11.5
          - matrix:
              cuda: "11.8"
            packages:
              - cuda-version=11.8
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
          - matrix:
              cuda: "12.5"
            packages:
              - cuda-version=12.5
  cuda:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "11.*"
            packages:
              - cudatoolkit
          - matrix:
              cuda: "12.*"
            packages:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - libcufile-dev
          - matrix:
              arch: aarch64
              cuda: "11.*"
            packages:
          - matrix:
              cuda: "11.8"
              arch: x86_64
            packages:
              - libcufile=1.4.0.31
              - libcufile-dev=1.4.0.31
          - matrix:
              cuda: "11.5"
              arch: x86_64
            packages:
              - libcufile>=1.1.0.37,<=1.1.1.25
              - libcufile-dev>=1.1.0.37,<=1.1.1.25
          - matrix:
              cuda: "11.4"
              arch: x86_64
            packages:
              - &libcufile_114 libcufile>=1.0.0.82,<=1.0.2.10
              - &libcufile_dev114 libcufile-dev>=1.0.0.82,<=1.0.2.10
          - matrix:
              cuda: "11.2"
              arch: x86_64
            packages:
              # The NVIDIA channel doesn't publish pkgs older than 11.4 for these libs,
              # so 11.2 uses 11.4 packages (the oldest available).
              - *libcufile_114
              - *libcufile_dev114
  depends_on_cupy:
    common:
      - output_types: conda
        packages:
          - cupy>=12.0.0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - cupy-cuda12x>=12.0.0
          - matrix: {cuda: "11.*"}
            packages: &cupy_packages_cu11
              - cupy-cuda11x>=12.0.0
          - {matrix: null, packages: *cupy_packages_cu11}
  depends_on_nvcomp:
    common:
      - output_types: conda
        packages:
          - nvcomp==4.0.1
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - nvidia-nvcomp-cu12==4.0.1
          - matrix:
              cuda: "11.*"
            packages:
              - nvidia-nvcomp-cu11==4.0.1
          - matrix:
            packages:
              - nvidia-nvcomp==4.0.1
  docs:
    common:
      - output_types: [conda, requirements]
        packages:
          - numpydoc
          - sphinx
          - sphinx-click
          - sphinx_rtd_theme
      - output_types: conda
        packages:
          - doxygen=1.9.1 # pre-commit hook needs a specific version.
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
              py: "3.12"
            packages:
              - python=3.12
          - matrix:
            packages:
              - python>=3.10,<3.13
  rapids_build_skbuild:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - rapids-build-backend>=0.3.0,<0.4.0.dev0
      - output_types: conda
        packages:
          - scikit-build-core>=0.10.0
      - output_types: [requirements, pyproject]
        packages:
          - scikit-build-core[pyproject]>=0.10.0
  run:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - numpy>=1.23,<3.0a0
          - zarr
          # See https://github.com/zarr-developers/numcodecs/pull/475
          - numcodecs !=0.12.0
          - packaging
  test_cpp:
    common:
      - output_types: conda
        packages:
          - *cmake_ver
  test_python:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &dask dask>=2022.05.2
          - pytest
          - pytest-cov
          - rangehttpserver
          - boto3>=1.21.21
      - output_types: [requirements, pyproject]
        packages:
          - moto[server]>=4.0.8
      - output_types: conda
        packages:
          - moto>=4.0.8
    specific:
      - output_types: [conda, requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-python>=12.0,<13.0a0
          - matrix: # All CUDA 11 versions
            packages:
              - cuda-python>=11.7.1,<12.0a0
